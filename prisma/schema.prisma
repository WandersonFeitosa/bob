generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  email       String        @unique
  name        String?
  password    String?
  DiscordUser DiscordUser[]

  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  update_by String?
  delete    Boolean  @default(false)

  @@map("db_user")
}

model DiscordUser {
  id         String @id @default(uuid())
  discord_id String @unique
  username   String @unique
  email      String @unique
  user_id    String
  user       User?  @relation(fields: [user_id], references: [id])

  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  update_by String?
  delete    Boolean  @default(false)

  @@map("db_discord_user")
}

model DiscordMultipliers {
  id       String @id @default(uuid())
  username String
  email    String
  image    String

  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  update_by String?
  delete    Boolean  @default(false)

  @@map("db_discord_multipliers")
}

model Progress {
  id      String @id @default(uuid())
  progess Int

  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  update_by String?
  delete    Boolean  @default(false)

  @@map("db_progess")
}

model MinecraftServerStatus {
  id     String @id @default(uuid())
  ip     String
  port   Int
  status String

  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  update_by String?
  delete    Boolean  @default(false)

  @@map("db_minecraft_server_status")
}

model TcsmpArts{
  id     String @id @default(uuid())
  name   String
  image  String
  uploadedBy String
  messageId String @unique
  status String

  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  update_by String?
  delete    Boolean  @default(false)

  @@map("db_tcsmp_arts")
}
