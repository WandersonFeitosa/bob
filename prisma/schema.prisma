generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MinecraftServerStatus {
  id           String    @id @default(uuid())
  ip           String
  port         Int
  status       String
  create_at    DateTime  @default(now())
  update_at    DateTime? @updatedAt
  update_by    String?
  delete       Boolean   @default(false)
  offlineCount Int       @default(0)

  @@map("tb_minecraft_server_status")
}

model TcsmpArt {
  id         String    @id @default(uuid())
  name       String
  image      String
  author     String
  uploadedBy String
  messageId  String    @unique
  status     String
  create_at  DateTime  @default(now())
  update_at  DateTime? @updatedAt
  update_by  String?
  delete     Boolean   @default(false)

  @@map("tb_tcsmp_arts")
}

model Hybrids {
  id         String    @id @default(uuid())
  name       String    @unique
  animal     String?
  discord_id String?   @unique
  image      String?
  lifes      Int       @default(4)
  create_at  DateTime  @default(now())
  update_at  DateTime?
  update_by  String?
  delete     Boolean   @default(false)
  family     Family?

  @@map("tb_hybrids")
}

model Player {
  id         String    @id @default(uuid())
  discord_id String    @unique
  name       String
  create_at  DateTime  @default(now())
  update_at  DateTime?
  update_by  String?
  delete     Boolean   @default(false)
  family     Family?   @relation(fields: [familyId], references: [id])
  familyId   String?

  @@map("tb_players")
}

model Family {
  id        String   @id @default(uuid())
  hybrid_id String   @unique
  hybrid    Hybrids  @relation(fields: [hybrid_id], references: [id])
  players   Player[]

  @@map("tb_families")
}
