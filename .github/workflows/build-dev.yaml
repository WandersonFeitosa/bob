name: Build and Publish

on:
  push:
    branches:
      - develop

jobs:
  google-cloud-build-and-deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: 'bob'
      IMAGE_NAME: 'bot'
      GOOGLE_APPLICATION_CREDENTIALS: ${{ vars.GOOGLE_APPLICATION_CREDENTIALS }}
      GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
      CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
      CLUSTER_REGION: ${{ vars.CLUSTER_REGION }}
      CLIENT_ID: ${{ vars.CLIENT_ID }}
      CLIENT_SECRET: ${{ vars.CLIENT_SECRET }}
      DISCORD_TOKEN: ${{ vars.DISCORD_TOKEN }}
      ADMIN_ROLES: ${{ vars.ADMIN_ROLES }}
      SERVER_ID: ${{ vars.SERVER_ID }}
      DATABASE_URL: ${{ vars.DATABASE_URL }}
      JWT_SECRET: ${{ vars.JWT_SECRET }}
      MINECRAFT_SERVER_IP: ${{ vars.MINECRAFT_SERVER_IP }}
      MINECRAFT_SERVER_PORT: ${{ vars.MINECRAFT_SERVER_PORT }}
      MINECRAFT_MANAGER_PORT: ${{ vars.MINECRAFT_MANAGER_PORT }}
      MINECRAFT_MANAGER_TOKEN: ${{ vars.MINECRAFT_MANAGER_TOKEN }}
      MINECRAFT_ANNOUNCE_CHANNEL_ID: ${{ vars.MINECRAFT_ANNOUNCE_CHANNEL_ID }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      BUCKET_NAME: ${{ vars.BUCKET_NAME }}
      APPROVE_ARTS_CHANNEL_ID: ${{ vars.APPROVE_ARTS_CHANNEL_ID }}
      ARTS_PANNEL_CHANNEL_ID: ${{ vars.ARTS_PANNEL_CHANNEL_ID }}
      NICKS_CHANNEL_ID: ${{ vars.NICKS_CHANNEL_ID }}
      SERVER_STATUS_CHANNEL_ID: ${{ vars.SERVER_STATUS_CHANNEL_ID }}
      NICKS_WHITELIST_CHANNEL_ID: ${{ vars.NICKS_WHITELIST_CHANNEL_ID }}
      MINECRAFT_SCREEN_NAME: ${{ vars.MINECRAFT_SCREEN_NAME }}
      SERVER_LOG_CHANNEL_ID: ${{ vars.SERVER_LOG_CHANNEL_ID }}
      TICKET_MESSAGE_ID: ${{ vars.TICKET_MESSAGE_ID }}
      TICKET_CATEGORY_ID: ${{ vars.TICKET_CATEGORY_ID }}
      ARCHIVE_TICKET_CATEGORY_ID: ${{ vars.ARCHIVE_TICKET_CATEGORY_ID }}
      HYBRID_STATUS_CHANNEL_ID: ${{ vars.HYBRID_STATUS_CHANNEL_ID }}
      SERVER_STATUS_LIST: ${{ vars.SERVER_STATUS_LIST }}
      AUTHOR_AUTHORIZE_CATEGORY_ID: ${{ vars.AUTHOR_AUTHORIZE_CATEGORY_ID }}
      PLAYER_NOTIFICATION_CHANNEL_ID: ${{ vars.PLAYER_NOTIFICATION_CHANNEL_ID }}
      HYBRID_NOTIFICATION_CHANNEL_ID: ${{ vars.HYBRID_NOTIFICATION_CHANNEL_ID }}
      HYBRID_SERVER_ID: ${{ vars.HYBRID_SERVER_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ vars.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Gcloud cli setup
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GOOGLE_PROJECT }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Create or update API Gateway
        run: |
            # Create API config
            gcloud api-gateway api-configs create api-config \
              --api=api \
              --openapi-spec=swagger.yaml \
              --project=$GOOGLE_PROJECT
  
            # Create or update API Gateway
            if gcloud api-gateway gateways describe api-gateway --project=$GOOGLE_PROJECT; then
              gcloud api-gateway gateways update api-gateway \
                --api-config=api-config \
                --project=$GOOGLE_PROJECT
            else
              gcloud api-gateway gateways create api-gateway \
                --api-config=api-config \
                --project=$GOOGLE_PROJECT
            fi
